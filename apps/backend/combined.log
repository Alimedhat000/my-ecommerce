{"level":"info","message":"Server is running on port 1000","service":"user-service","timestamp":"2025-08-11 13:08:33"}
{"level":"info","message":"Swagger documentation available at http://localhost:1000/api-docs","service":"user-service","timestamp":"2025-08-11 13:08:33"}
{"level":"info","message":"GET /api-docs","service":"user-service","timestamp":"2025-08-11 13:08:40"}
{"level":"info","message":"GET /api-docs/","service":"user-service","timestamp":"2025-08-11 13:08:41"}
{"level":"info","message":"GET /api-docs/swagger-ui.css","service":"user-service","timestamp":"2025-08-11 13:08:41"}
{"level":"info","message":"GET /api-docs/swagger-ui-bundle.js","service":"user-service","timestamp":"2025-08-11 13:08:41"}
{"level":"info","message":"GET /api-docs/swagger-ui-standalone-preset.js","service":"user-service","timestamp":"2025-08-11 13:08:41"}
{"level":"info","message":"GET /api-docs/swagger-ui-init.js","service":"user-service","timestamp":"2025-08-11 13:08:41"}
{"level":"info","message":"GET /api-docs/favicon-32x32.png","service":"user-service","timestamp":"2025-08-11 13:08:41"}
{"level":"info","message":"GET /","service":"user-service","timestamp":"2025-08-11 13:08:47"}
{"level":"warn","message":"404 - Route Not Found - / - GET - ::1","service":"user-service","timestamp":"2025-08-11 13:08:47"}
{"level":"info","message":"GET /favicon.ico","service":"user-service","timestamp":"2025-08-11 13:08:47"}
{"level":"warn","message":"404 - Route Not Found - /favicon.ico - GET - ::1","service":"user-service","timestamp":"2025-08-11 13:08:47"}
{"level":"info","message":"GET /","service":"user-service","timestamp":"2025-08-11 13:08:51"}
{"level":"warn","message":"404 - Route Not Found - / - GET - ::1","service":"user-service","timestamp":"2025-08-11 13:08:51"}
{"level":"info","message":"GET /api-docs/","service":"user-service","timestamp":"2025-08-11 13:09:06"}
{"level":"info","message":"GET /api-docs/swagger-ui.css","service":"user-service","timestamp":"2025-08-11 13:09:06"}
{"level":"info","message":"GET /api-docs/swagger-ui-bundle.js","service":"user-service","timestamp":"2025-08-11 13:09:06"}
{"level":"info","message":"GET /api-docs/swagger-ui-standalone-preset.js","service":"user-service","timestamp":"2025-08-11 13:09:06"}
{"level":"info","message":"GET /api-docs/swagger-ui-init.js","service":"user-service","timestamp":"2025-08-11 13:09:06"}
{"level":"warn","message":"ALLOWED_ORIGINS not set — CORS will reject browser requests. Set ALLOWED_ORIGINS in .env for production.","service":"user-service","timestamp":"2025-08-11 13:18:24"}
{"level":"info","message":"Server is running on port 1000","service":"user-service","timestamp":"2025-08-11 13:18:24"}
{"level":"info","message":"Swagger documentation available at http://localhost:1000/api-docs","service":"user-service","timestamp":"2025-08-11 13:18:24"}
{"level":"info","message":"GET /api-docs/ - ::1","service":"user-service","timestamp":"2025-08-11 13:18:30"}
{"level":"info","message":"GET /api-docs/swagger-ui.css - ::1","service":"user-service","timestamp":"2025-08-11 13:18:30"}
{"level":"info","message":"GET /api-docs/swagger-ui-bundle.js - ::1","service":"user-service","timestamp":"2025-08-11 13:18:30"}
{"level":"info","message":"GET /api-docs/swagger-ui-standalone-preset.js - ::1","service":"user-service","timestamp":"2025-08-11 13:18:30"}
{"level":"info","message":"GET /api-docs/swagger-ui-init.js - ::1","service":"user-service","timestamp":"2025-08-11 13:18:30"}
{"level":"info","message":"POST /api/auth/register - ::1","service":"user-service","timestamp":"2025-08-11 13:19:36"}
{"level":"info","message":"Register endpoint called","service":"user-service","timestamp":"2025-08-11 13:19:36"}
{"level":"info","message":"Attempting to register user with email: undefined","service":"user-service","timestamp":"2025-08-11 13:19:36"}
{"level":"error","message":"Caught async error: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/azharhussain/projects/personal/Express-TypeScript-API-with-Prisma-and-Authentication/src/services/authService.ts:9:42\n\n  6 \n  7 export const register = async (email: string, password: string, name: string) => {\n  8   logger.info(`Attempting to register user with email: ${email}`);\n→ 9   const existingUser = await prisma.user.findUnique({\n        where: {\n          email: undefined,\n      ?   id?: Int,\n      ?   AND?: UserWhereInput | UserWhereInput[],\n      ?   OR?: UserWhereInput[],\n      ?   NOT?: UserWhereInput | UserWhereInput[],\n      ?   password?: StringFilter | String,\n      ?   name?: StringNullableFilter | String | Null\n        }\n      })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.","service":"user-service","stack":"PrismaClientValidationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/azharhussain/projects/personal/Express-TypeScript-API-with-Prisma-and-Authentication/src/services/authService.ts:9:42\n\n  6 \n  7 export const register = async (email: string, password: string, name: string) => {\n  8   logger.info(`Attempting to register user with email: ${email}`);\n→ 9   const existingUser = await prisma.user.findUnique({\n        where: {\n          email: undefined,\n      ?   id?: Int,\n      ?   AND?: UserWhereInput | UserWhereInput[],\n      ?   OR?: UserWhereInput[],\n      ?   NOT?: UserWhereInput | UserWhereInput[],\n      ?   password?: StringFilter | String,\n      ?   name?: StringNullableFilter | String | Null\n        }\n      })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.\n    at throwValidationException (/Users/azharhussain/projects/personal/Express-TypeScript-API-with-Prisma-and-Authentication/node_modules/@prisma/client/src/runtime/core/errorRendering/throwValidationException.ts:45:9)\n    at ri.handleRequestError (/Users/azharhussain/projects/personal/Express-TypeScript-API-with-Prisma-and-Authentication/node_modules/@prisma/client/src/runtime/RequestHandler.ts:202:7)\n    at ri.handleAndLogRequestError (/Users/azharhussain/projects/personal/Express-TypeScript-API-with-Prisma-and-Authentication/node_modules/@prisma/client/src/runtime/RequestHandler.ts:174:12)\n    at ri.request (/Users/azharhussain/projects/personal/Express-TypeScript-API-with-Prisma-and-Authentication/node_modules/@prisma/client/src/runtime/RequestHandler.ts:143:12)\n    at l (/Users/azharhussain/projects/personal/Express-TypeScript-API-with-Prisma-and-Authentication/node_modules/@prisma/client/src/runtime/getPrismaClient.ts:862:24)","timestamp":"2025-08-11 13:19:39"}
{"level":"error","message":"500 - \nInvalid `prisma.user.findUnique()` invocation in\n/Users/azharhussain/projects/personal/Express-TypeScript-API-with-Prisma-and-Authentication/src/services/authService.ts:9:42\n\n  6 \n  7 export const register = async (email: string, password: string, name: string) => {\n  8   logger.info(`Attempting to register user with email: ${email}`);\n→ 9   const existingUser = await prisma.user.findUnique({\n        where: {\n          email: undefined,\n      ?   id?: Int,\n      ?   AND?: UserWhereInput | UserWhereInput[],\n      ?   OR?: UserWhereInput[],\n      ?   NOT?: UserWhereInput | UserWhereInput[],\n      ?   password?: StringFilter | String,\n      ?   name?: StringNullableFilter | String | Null\n        }\n      })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?. - /api/auth/register - POST - ::1","service":"user-service","timestamp":"2025-08-11 13:19:39"}
{"level":"warn","message":"ALLOWED_ORIGINS not set — CORS will reject browser requests. Set ALLOWED_ORIGINS in .env for production.","service":"user-service","timestamp":"2025-08-11 13:24:31"}
{"level":"info","message":"Server is running on port 1000","service":"user-service","timestamp":"2025-08-11 13:24:31"}
{"level":"info","message":"Swagger documentation available at http://localhost:1000/api-docs","service":"user-service","timestamp":"2025-08-11 13:24:31"}
{"level":"warn","message":"ALLOWED_ORIGINS not set — CORS will reject browser requests. Set ALLOWED_ORIGINS in .env for production.","service":"user-service","timestamp":"2025-08-11 13:24:47"}
{"level":"info","message":"Server is running on port 1000","service":"user-service","timestamp":"2025-08-11 13:24:47"}
{"level":"info","message":"Swagger documentation available at http://localhost:1000/api-docs","service":"user-service","timestamp":"2025-08-11 13:24:47"}
{"level":"warn","message":"ALLOWED_ORIGINS not set — CORS will reject browser requests. Set ALLOWED_ORIGINS in .env for production.","service":"user-service","timestamp":"2025-08-11 13:26:11"}
{"level":"warn","message":"ALLOWED_ORIGINS not set — CORS will reject browser requests. Set ALLOWED_ORIGINS in .env for production.","service":"user-service","timestamp":"2025-08-11 13:26:54"}
{"level":"warn","message":"ALLOWED_ORIGINS not set — CORS will reject browser requests. Set ALLOWED_ORIGINS in .env for production.","service":"user-service","timestamp":"2025-08-11 13:27:56"}
{"level":"warn","message":"ALLOWED_ORIGINS not set — CORS will reject browser requests. Set ALLOWED_ORIGINS in .env for production.","service":"user-service","timestamp":"2025-08-11 13:28:47"}
{"level":"info","message":"Server is running on port 1000","service":"user-service","timestamp":"2025-08-11 13:28:47"}
{"level":"info","message":"Swagger documentation available at http://localhost:1000/api-docs","service":"user-service","timestamp":"2025-08-11 13:28:47"}
{"level":"info","message":"GET / - ::1","service":"user-service","timestamp":"2025-08-11 13:29:12"}
{"level":"warn","message":"404 - Route Not Found - / - GET - ::1","service":"user-service","timestamp":"2025-08-11 13:29:12"}
{"level":"info","message":"GET /api-docs/ - ::1","service":"user-service","timestamp":"2025-08-11 13:29:20"}
{"level":"info","message":"GET /api-docs/swagger-ui.css - ::1","service":"user-service","timestamp":"2025-08-11 13:29:20"}
{"level":"info","message":"GET /api-docs/swagger-ui-standalone-preset.js - ::1","service":"user-service","timestamp":"2025-08-11 13:29:20"}
{"level":"info","message":"GET /api-docs/swagger-ui-bundle.js - ::1","service":"user-service","timestamp":"2025-08-11 13:29:20"}
{"level":"info","message":"GET /api-docs/swagger-ui-init.js - ::1","service":"user-service","timestamp":"2025-08-11 13:29:20"}
{"level":"info","message":"POST /api/auth/register - ::1","service":"user-service","timestamp":"2025-08-11 13:30:40"}
{"level":"info","message":"Register endpoint called","service":"user-service","timestamp":"2025-08-11 13:30:40"}
{"level":"info","message":"Attempting to register user with email: azharhussainnet@gmail.com","service":"user-service","timestamp":"2025-08-11 13:30:40"}
{"level":"info","message":"User registered successfully: 1","service":"user-service","timestamp":"2025-08-11 13:30:42"}
{"level":"info","message":"User registered successfully: 1","service":"user-service","timestamp":"2025-08-11 13:30:42"}
{"level":"warn","message":"ALLOWED_ORIGINS not set — CORS will reject browser requests. Set ALLOWED_ORIGINS in .env for production.","service":"user-service","timestamp":"2025-08-11 13:33:18"}
{"level":"info","message":"Server is running on port 1000","service":"user-service","timestamp":"2025-08-11 13:33:18"}
{"level":"info","message":"Swagger documentation available at http://localhost:1000/api-docs","service":"user-service","timestamp":"2025-08-11 13:33:18"}
{"level":"warn","message":"ALLOWED_ORIGINS not set — CORS will reject browser requests. Set ALLOWED_ORIGINS in .env for production.","service":"user-service","timestamp":"2025-08-11 13:33:35"}
{"level":"info","message":"Server is running on port 1000","service":"user-service","timestamp":"2025-08-11 13:33:35"}
{"level":"info","message":"Swagger documentation available at http://localhost:1000/api-docs","service":"user-service","timestamp":"2025-08-11 13:33:35"}
{"level":"info","message":"POST /api/auth/register - ::1","service":"user-service","timestamp":"2025-08-11 13:33:46"}
{"level":"info","message":"Register endpoint called","service":"user-service","timestamp":"2025-08-11 13:33:46"}
{"level":"info","message":"Attempting to register user with email: azharhussainnet@gmail.com","service":"user-service","timestamp":"2025-08-11 13:33:46"}
{"level":"warn","message":"Registration failed: Email already in use - azharhussainnet@gmail.com","service":"user-service","timestamp":"2025-08-11 13:33:49"}
{"level":"error","message":"Caught async error: Email already in use","service":"user-service","stack":"Error: Email already in use\n    at /Users/azharhussain/projects/personal/Express-TypeScript-API-with-Prisma-and-Authentication/src/services/authService.ts:63:13\n    at Generator.throw (<anonymous>)\n    at rejected (/Users/azharhussain/projects/personal/Express-TypeScript-API-with-Prisma-and-Authentication/src/services/authService.ts:6:65)","timestamp":"2025-08-11 13:33:49"}
{"level":"error","message":"400 - Email already in use - /api/auth/register - POST - ::1","service":"user-service","timestamp":"2025-08-11 13:33:49"}
{"level":"warn","message":"ALLOWED_ORIGINS not set — CORS will reject browser requests.","service":"user-service","timestamp":"2025-08-11 13:40:26"}
{"level":"info","message":"Server is running on port 1000","service":"user-service","timestamp":"2025-08-11 13:40:26"}
{"level":"info","message":"Swagger docs: http://localhost:1000/api-docs","service":"user-service","timestamp":"2025-08-11 13:40:26"}
{"level":"info","message":"GET /api-docs/ - ::1","service":"user-service","timestamp":"2025-08-11 13:40:40"}
{"level":"info","message":"GET /api-docs/swagger-ui.css - ::1","service":"user-service","timestamp":"2025-08-11 13:40:40"}
{"level":"info","message":"GET /api-docs/swagger-ui-standalone-preset.js - ::1","service":"user-service","timestamp":"2025-08-11 13:40:40"}
{"level":"info","message":"GET /api-docs/swagger-ui-bundle.js - ::1","service":"user-service","timestamp":"2025-08-11 13:40:40"}
{"level":"info","message":"GET /api-docs/swagger-ui-init.js - ::1","service":"user-service","timestamp":"2025-08-11 13:40:40"}
{"level":"info","message":"GET /api-docs/favicon-32x32.png - ::1","service":"user-service","timestamp":"2025-08-11 13:40:41"}
{"level":"info","message":"GET /api-docs/ - ::1","service":"user-service","timestamp":"2025-08-11 13:40:51"}
{"level":"info","message":"GET /api-docs/swagger-ui.css - ::1","service":"user-service","timestamp":"2025-08-11 13:40:51"}
{"level":"info","message":"GET /api-docs/swagger-ui-bundle.js - ::1","service":"user-service","timestamp":"2025-08-11 13:40:51"}
{"level":"info","message":"GET /api-docs/swagger-ui-standalone-preset.js - ::1","service":"user-service","timestamp":"2025-08-11 13:40:51"}
{"level":"info","message":"GET /api-docs/swagger-ui-init.js - ::1","service":"user-service","timestamp":"2025-08-11 13:40:51"}
{"level":"info","message":"POST /api/auth/login - ::1","service":"user-service","timestamp":"2025-08-11 13:41:24"}
{"level":"info","message":"Login endpoint called","service":"user-service","timestamp":"2025-08-11 13:41:24"}
{"level":"info","message":"Login attempt for user: azharhussainnet@gmail.com","service":"user-service","timestamp":"2025-08-11 13:41:24"}
{"level":"warn","message":"Login failed: Invalid password for user - azharhussainnet@gmail.com","service":"user-service","timestamp":"2025-08-11 13:41:27"}
{"level":"error","message":"Caught async error: Invalid credentials","service":"user-service","stack":"Error: Invalid credentials\n    at /Users/azharhussain/projects/personal/Express-TypeScript-API-with-Prisma-and-Authentication/src/services/authService.ts:99:11\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/azharhussain/projects/personal/Express-TypeScript-API-with-Prisma-and-Authentication/src/services/authService.ts:5:58)","timestamp":"2025-08-11 13:41:27"}
{"level":"error","message":"401 - Invalid credentials - /api/auth/login - POST - ::1","service":"user-service","timestamp":"2025-08-11 13:41:27"}
{"level":"info","message":"POST /api/auth/login - ::1","service":"user-service","timestamp":"2025-08-11 13:42:15"}
{"level":"info","message":"Login endpoint called","service":"user-service","timestamp":"2025-08-11 13:42:15"}
{"level":"info","message":"Login attempt for user: azharhussainnet@gmail.com","service":"user-service","timestamp":"2025-08-11 13:42:15"}
{"level":"warn","message":"Login failed: User not found - azharhussainnet@gmail.com","service":"user-service","timestamp":"2025-08-11 13:42:16"}
{"level":"error","message":"Caught async error: User not found","service":"user-service","stack":"Error: User not found\n    at /Users/azharhussain/projects/personal/Express-TypeScript-API-with-Prisma-and-Authentication/src/services/authService.ts:92:11\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/azharhussain/projects/personal/Express-TypeScript-API-with-Prisma-and-Authentication/src/services/authService.ts:5:58)","timestamp":"2025-08-11 13:42:16"}
{"level":"error","message":"404 - User not found - /api/auth/login - POST - ::1","service":"user-service","timestamp":"2025-08-11 13:42:16"}
{"level":"info","message":"POST /api/auth/register - ::1","service":"user-service","timestamp":"2025-08-11 13:42:50"}
{"level":"info","message":"Register endpoint called","service":"user-service","timestamp":"2025-08-11 13:42:50"}
{"level":"info","message":"Attempting to register user with email: azharhussainnet@gmail.com","service":"user-service","timestamp":"2025-08-11 13:42:50"}
{"level":"info","message":"User registered successfully: 3","service":"user-service","timestamp":"2025-08-11 13:42:51"}
{"level":"info","message":"User registered successfully: 3","service":"user-service","timestamp":"2025-08-11 13:42:51"}
{"level":"info","message":"POST /api/auth/login - ::1","service":"user-service","timestamp":"2025-08-11 13:43:07"}
{"level":"info","message":"Login endpoint called","service":"user-service","timestamp":"2025-08-11 13:43:07"}
{"level":"info","message":"Login attempt for user: azharhussainnet@gmail.com","service":"user-service","timestamp":"2025-08-11 13:43:07"}
{"level":"info","message":"User logged in successfully: 3","service":"user-service","timestamp":"2025-08-11 13:43:07"}
{"level":"info","message":"User logged in successfully: azharhussainnet@gmail.com","service":"user-service","timestamp":"2025-08-11 13:43:07"}
{"level":"info","message":"POST /api/auth/login - ::1","service":"user-service","timestamp":"2025-08-11 13:43:52"}
{"level":"info","message":"Login endpoint called","service":"user-service","timestamp":"2025-08-11 13:43:52"}
{"level":"info","message":"Login attempt for user: azharhussainnet@gmail.com","service":"user-service","timestamp":"2025-08-11 13:43:52"}
{"level":"info","message":"User logged in successfully: 3","service":"user-service","timestamp":"2025-08-11 13:43:52"}
{"level":"info","message":"User logged in successfully: azharhussainnet@gmail.com","service":"user-service","timestamp":"2025-08-11 13:43:52"}
{"level":"warn","message":"ALLOWED_ORIGINS not set — CORS will reject browser requests.","service":"user-service","timestamp":"2025-08-11 14:39:25"}
{"level":"info","message":"Server is running on port 1000","service":"user-service","timestamp":"2025-08-11 14:39:25"}
{"level":"info","message":"Swagger docs: http://localhost:1000/api-docs","service":"user-service","timestamp":"2025-08-11 14:39:25"}
{"level":"info","message":"Server is running on port 1000","service":"user-service","timestamp":"2025-08-11 14:41:08"}
{"level":"info","message":"Swagger docs: http://localhost:1000/api-docs","service":"user-service","timestamp":"2025-08-11 14:41:08"}
{"level":"info","message":"Server is running on port 1000","service":"user-service","timestamp":"2025-08-11 14:45:08"}
{"level":"info","message":"Swagger docs: http://localhost:1000/api-docs","service":"user-service","timestamp":"2025-08-11 14:45:08"}
{"level":"error","message":"404 - ENOENT: no such file or directory, stat '/Users/azharhussain/projects/personal/Express-TypeScript-API-with-Prisma-and-Authentication/public/index.html' - / - GET - ::1","service":"user-service","timestamp":"2025-08-11 14:45:20"}
{"level":"info","message":"GET /api-docs/ - ::1","service":"user-service","timestamp":"2025-08-11 14:46:36"}
{"level":"info","message":"GET /api-docs/swagger-ui.css - ::1","service":"user-service","timestamp":"2025-08-11 14:46:36"}
{"level":"info","message":"GET /api-docs/swagger-ui-standalone-preset.js - ::1","service":"user-service","timestamp":"2025-08-11 14:46:36"}
{"level":"info","message":"GET /api-docs/swagger-ui-bundle.js - ::1","service":"user-service","timestamp":"2025-08-11 14:46:36"}
{"level":"info","message":"GET /api-docs/swagger-ui-init.js - ::1","service":"user-service","timestamp":"2025-08-11 14:46:36"}
{"level":"info","message":"GET /api-docs/ - ::1","service":"user-service","timestamp":"2025-08-11 14:46:51"}
{"level":"info","message":"GET /api-docs/swagger-ui.css - ::1","service":"user-service","timestamp":"2025-08-11 14:46:51"}
{"level":"info","message":"GET /api-docs/swagger-ui-bundle.js - ::1","service":"user-service","timestamp":"2025-08-11 14:46:51"}
{"level":"info","message":"GET /api-docs/swagger-ui-standalone-preset.js - ::1","service":"user-service","timestamp":"2025-08-11 14:46:51"}
{"level":"info","message":"GET /api-docs/swagger-ui-init.js - ::1","service":"user-service","timestamp":"2025-08-11 14:46:51"}
